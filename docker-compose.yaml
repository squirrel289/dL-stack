# to run: docker-compose run
#
# Create a .evn file in the same folder as this file and change the variables.
# MOUNT_POINT=/tmp/
# VPN_PROVIDER=changeme
# VPN_CONFIG=changeme
# VPN_USERNAME=changeme
# VPN_PASSWORD=changeme
#
#
version: "2"

services:
  transmission:
    image: haugene/transmission-openvpn
    container_name: transmission-openvpn
    restart: always
    ports:
      - "9091:9091"
      - "8888:8888"
    networks:
      - vpnnet
    environment:
      - OPENVPN_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_CONFIG=${VPN_CONFIG}
      - OPENVPN_USERNAME=${VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 --mssfix 1460
      - PUID=${PUID}
      - PGID=${PGID}
      - WEBPROXY_ENABLED=true
      - WEBPROXY_PORT=8888
      - LOCAL_NETWORK=192.168.0.0/16,172.17.0.0/24
    volumes:
      - ${DOWNLOAD_PATH}:/data
      - /etc/localtime:/etc/localtime:ro
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    ports:
      - "7878:7878"
    networks:
      - vpnnet
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
    volumes:
      - ${CONFIG_ROOT}/radarr/:/config
      - ${DOWNLOAD_PATH}/completed:/downloads
      - ${MOVIE_PATH}:/movies
      - /etc/localtime:/etc/localtime:ro
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    ports:
      - "8989:8989"
    networks:
      - vpnnet
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
    volumes:
      - ${CONFIG_ROOT}/sonarr/:/config
      - ${DOWNLOAD_PATH}:/downloads     
      - ${TV_PATH}:/tv
      - /etc/localtime:/etc/localtime:ro
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    restart: always
    ports:
      - "8686:8686"
    networks:
      - vpnnet
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
    volumes:
      - ${CONFIG_ROOT}/lidarr/:/config
      - ${DOWNLOAD_PATH}:/downloads     
      - ${MUSIC_PATH}:/music
      - /etc/localtime:/etc/localtime:ro
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always
    networks:
      - vpnnet
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
    volumes:
      - ${CONFIG_ROOT}/jackett:/config
      - ${DOWNLOAD_PATH}:/downloads
      - /etc/localtime:/etc/localtime:ro 
    ports:
      - "9117:9117"
  filebot:
    image: coppit/filebot
    container_name: filebot
    restart: always
    environment:
       - WIDTH=1280
       - HEIGHT=720
       - USER_ID=${PUID}
       - GROUP_ID=${PGID}
    network_mode: host
    ports:
       - "3389:3389"
       - "8787:8787"
    volumes:
       - ${DOWNLOAD_PATH}:/media:rw
       - ${CONFIG_ROOT}/filebot:/config:rw
  musicbrainz:
    image: linuxserver/musicbrainz
    container_name: musicbrainz
    environment:
      - PUID=1010
      - PGID=1010
      - BRAINZCODE=ysEm5FZWlIfNBiD0oR6BhAimqQTpAJwXdnaqLFm9
      - WEBADDRESS=192.168.1.32
    network_mode: host
    ports:
      - 5000:5000
    volumes:
      - ${CONFIG_ROOT}/musicbrainz:/config:rw
      - ${DOWNLOAD_PATH}:/data:rw
      - /etc/localtime:/etc/localtime:ro 
    restart: unless-stopped
networks:
  vpnnet:
    driver: bridge
